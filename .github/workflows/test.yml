name: Run Tests ðŸ§ª

on: 
  push:
      branches:
          - main
          - develop
          #- 'feature/**'
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:

jobs:
  buildAndTestForSomePlatforms:
    name: Test Unity version ${{ matrix.unityVersion }} | Platform ${{ matrix.targetPlatform }} | Test mode ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - all
          #- playmode
          #- editmode
        unityVersion:
          # Main LTS version : https://unity3d.com/unity/qa/lts-releases
          - 2019.4.38f1
          #- 2020.3.33f1
          #- 2021.3.1f1
        projectPath:
          - package/${{ github.event.repository.name }}
          
    steps:
      # Checkout sandbox project
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          
      # Caching dependencies and build outputs to improve workflow execution time
      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
            
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
                        
      - name: copy dir to new dir
        run: |
          pwd
          folderName=$(echo "${PWD##*/}")
          rsync -r "$GITHUB_WORKSPACE" "package" 
          ls -F "package/$folderName"
            
      ################################
      #     Check sample folder      #
      ################################      
      - name: Check sample folder
        run: |
          if [ -f ${{ matrix.projectPath }}/Sample.meta ];
          then
             echo "Sample.meta exist. Please remove it from your project"
             exit 1
          fi
          
          if [ -d ${{ matrix.projectPath }}/Sample/ ];
          then
             echo "Sample.meta exist. Please ensure this folder is hiding for unity renaming it Sample~. Also ensure that meta Sample.meta doesn't exist"
             exit 1
          fi
          
          echo "Sample folder ok"
            
      # Run tests
      - name: "Run tests"
        id: runTests
        uses: trudeaua21/unity-test-runner@main
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: ${{ matrix.unityVersion }}
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          packageMode: true
           # List of parameters here : https://docs.unity3d.com/Manual/CommandLineArguments.html
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+open-source-unity-package.unit-test.*,-*Tests*'
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          
      # Upload coverage
      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        with:
          name: Package Coverage results (${{ matrix.testMode }}-${{ matrix.unityVersion }}-${{ matrix.testMode }}
          path: ${{ steps.runTests.outputs.coveragePath }}
          retention-days: 1

      # Upload coverage
      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        with:
          name: Package Coverage results (${{ matrix.testMode }}-${{ matrix.unityVersion }}-${{ matrix.testMode }}
          path: ${{ matrix.projectPath }}/${{ steps.runTests.outputs.coveragePath }}
          retention-days: 1
